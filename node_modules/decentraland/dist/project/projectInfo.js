"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getProjectInfo = void 0;
const path_1 = __importDefault(require("path"));
const fs_extra_1 = __importDefault(require("fs-extra"));
const schemas_1 = require("@dcl/schemas");
function getProjectInfo(workDir) {
    const assetJsonPath = path_1.default.resolve(workDir, 'asset.json');
    if (fs_extra_1.default.existsSync(assetJsonPath)) {
        try {
            // eslint-disable-next-line @typescript-eslint/no-var-requires
            const assetJson = require(assetJsonPath);
            if (schemas_1.sdk.AssetJson.validate(assetJson)) {
                if (assetJson.assetType === schemas_1.sdk.ProjectType.PORTABLE_EXPERIENCE) {
                    return {
                        sceneId: assetJson.id,
                        sceneType: schemas_1.sdk.ProjectType.PORTABLE_EXPERIENCE
                    };
                }
            }
            else {
                const errors = (schemas_1.sdk.AssetJson.validate.errors || [])
                    .map((a) => `${a.dataPath} ${a.message}`)
                    .join('');
                console.error(`Unable to validate asset.json properly, please check it.`, errors);
            }
        }
        catch (err) {
            console.error(`Unable to load asset.json properly, please check it.`, err);
        }
        return {
            sceneId: '',
            sceneType: schemas_1.sdk.ProjectType.SMART_ITEM
        };
    }
    return {
        sceneId: 'b64-' + Buffer.from(workDir).toString('base64'),
        sceneType: schemas_1.sdk.ProjectType.SCENE
    };
}
exports.getProjectInfo = getProjectInfo;
//# sourceMappingURL=projectInfo.js.map